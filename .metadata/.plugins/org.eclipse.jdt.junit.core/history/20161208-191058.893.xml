<?xml version="1.0" encoding="UTF-8"?><testrun name="FracCalcTestFinal" project="FracCalc" tests="118" started="118" failures="16" errors="0" ignored="0">
  <testsuite name="fracCalc.FracCalcTestFinal" time="0.027">
    <testcase name="testMultiplicationByZero1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationByZero7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionCombined1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionCombined2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionCombined3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionCombined4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionCombined5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithNegatives8" classname="fracCalc.FracCalcTestFinal" time="0.012">
      <failure>
        <expected>-1_13/32</expected>
        <actual>-1_13/-32</actual>org.junit.ComparisonFailure: expected:&lt;-1_13/[]32&gt; but was:&lt;-1_13/[-]32&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.testDivisionWithNegatives8(FracCalcTestFinal.java:141)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testAdditionReduce1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionReduce2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionReduce3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic8" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testMultiplicationBasic9" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="multipleOps10" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>0</expected>
        <actual>-12457</actual>org.junit.ComparisonFailure: expected:&lt;[0]&gt; but was:&lt;[-12457]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps10(FracCalcTestFinal.java:170)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps11" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>7</expected>
        <actual>12_3/4</actual>org.junit.ComparisonFailure: expected:&lt;[7]&gt; but was:&lt;[12_3/4]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps11(FracCalcTestFinal.java:171)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps12" classname="fracCalc.FracCalcTestFinal" time="0.001">
      <failure>
        <expected>4</expected>
        <actual>6</actual>org.junit.ComparisonFailure: expected:&lt;[4]&gt; but was:&lt;[6]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps12(FracCalcTestFinal.java:172)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps13" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>-4</expected>
        <actual>6</actual>org.junit.ComparisonFailure: expected:&lt;[-4]&gt; but was:&lt;[6]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps13(FracCalcTestFinal.java:173)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps14" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionImproperFractionsAndReductions1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionImproperFractionsAndReductions2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionReduce1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionReduce2" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testAdditionSimple1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionSimple2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionSimple3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="multipleOps1" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>-20/21</expected>
        <actual>2_11/12</actual>org.junit.ComparisonFailure: expected:&lt;[-20/21]&gt; but was:&lt;[2_11/12]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps1(FracCalcTestFinal.java:161)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="multipleOps3" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>0</expected>
        <actual>216</actual>org.junit.ComparisonFailure: expected:&lt;[0]&gt; but was:&lt;[216]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps3(FracCalcTestFinal.java:163)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps4" classname="fracCalc.FracCalcTestFinal" time="0.001">
      <failure>
        <expected>3_47/60</expected>
        <actual>5_5/6</actual>org.junit.ComparisonFailure: expected:&lt;[3_47/60]&gt; but was:&lt;[5_5/6]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps4(FracCalcTestFinal.java:164)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps5" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>1</expected>
        <actual>0</actual>org.junit.ComparisonFailure: expected:&lt;[1]&gt; but was:&lt;[0]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps5(FracCalcTestFinal.java:165)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="multipleOps7" classname="fracCalc.FracCalcTestFinal" time="0.001">
      <failure>
        <expected>-1</expected>
        <actual>2/5</actual>org.junit.ComparisonFailure: expected:&lt;[-1]&gt; but was:&lt;[2/5]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps7(FracCalcTestFinal.java:167)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps8" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>0</expected>
        <actual>-3</actual>org.junit.ComparisonFailure: expected:&lt;[0]&gt; but was:&lt;[-3]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps8(FracCalcTestFinal.java:168)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="multipleOps9" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>4_1/2</expected>
        <actual>2_2/3</actual>org.junit.ComparisonFailure: expected:&lt;[4_1/2]&gt; but was:&lt;[2_2/3]&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.multipleOps9(FracCalcTestFinal.java:169)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDivisionWithZero1" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testDivisionWithZero2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithZero3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithZero4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithZero5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithZero6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionWithZero7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionCombined1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionCombined2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionCombined3" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testDivisionBasic1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic8" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionBasic9" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers2" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testAdditionWholeNumbers3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWholeNumbers8" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionSimple1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionSimple2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionSimple3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives3" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testMultiplicationWithNegatives4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives5" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives8" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationWithNegatives9" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWithNegatives1" classname="fracCalc.FracCalcTestFinal" time="0.001">
      <failure>
        <expected>-2/5</expected>
        <actual>2/5</actual>org.junit.ComparisonFailure: expected:&lt;[-]2/5&gt; but was:&lt;[]2/5&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.testSubtractionWithNegatives1(FracCalcTestFinal.java:59)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSubtractionWithNegatives2" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>-7/8</expected>
        <actual>7/8</actual>org.junit.ComparisonFailure: expected:&lt;[-]7/8&gt; but was:&lt;[]7/8&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.testSubtractionWithNegatives2(FracCalcTestFinal.java:60)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSubtractionWithNegatives3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWithNegatives4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWithNegatives5" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testSubtractionWithNegatives6" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWithNegatives7" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWithNegatives8" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWholeNumbers1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testSubtractionWholeNumbers2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationCombined1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationCombined2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationCombined3" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testAdditionImproperFractionsAndReductions1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionImproperFractionsAndReductions2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWithNegatives1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWithNegatives2" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWithNegatives3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWithNegatives4" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testAdditionWithNegatives5" classname="fracCalc.FracCalcTestFinal" time="0.001"/>
    <testcase name="testDivisionCombined1" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionCombined2" classname="fracCalc.FracCalcTestFinal" time="0.0">
      <failure>
        <expected>-2_2/3</expected>
        <actual>-2_2/-3</actual>org.junit.ComparisonFailure: expected:&lt;-2_2/[]3&gt; but was:&lt;-2_2/[-]3&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.testDivisionCombined2(FracCalcTestFinal.java:156)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDivisionCombined3" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testDivisionCombined4" classname="fracCalc.FracCalcTestFinal" time="0.001">
      <failure>
        <expected>-5/21</expected>
        <actual>5/-21</actual>org.junit.ComparisonFailure: expected:&lt;[-5/]21&gt; but was:&lt;[5/-]21&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at fracCalc.FracCalcTestFinal.testDivisionCombined4(FracCalcTestFinal.java:158)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMultiplicationBasic10" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
    <testcase name="testMultiplicationBasic11" classname="fracCalc.FracCalcTestFinal" time="0.0"/>
  </testsuite>
</testrun>
